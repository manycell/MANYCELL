/* copasiws/timecoursews.h
   Generated by wsdl2h 1.2.15 from /home/dada/development/copasiws_dev/wsdl/timecoursews.wsdl and typemap.dat
   2011-01-27 11:55:39 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Build Notes

NOTE:

 - Run soapcpp2 on copasiws/timecoursews.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.

GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
A commercial use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://services.copasiws.copasi.org/timecoursews.wsdl                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://services.copasiws.copasi.org/timecoursews.wsdl"
ns2 = "http://timecoursews.services.copasiws.copasi.org/types"
ns3 = "http://copasi.org/copasiws/schemas"

*/

/// @brief * Filename : timecourse.wsdl * Description: wsdl for COPASI time Course Web Service * Author(s) : Joseph Olufemi Dada *
#define SOAP_NAMESPACE_OF_ns2	"http://timecoursews.services.copasiws.copasi.org/types"
//gsoap ns2   schema namespace:	http://timecoursews.services.copasiws.copasi.org/types
//gsoap ns2   schema form:	unqualified

/// @brief * Filename : copasiws.xsd * Description: XML Schema for COPASI Web Services * Author(s) : Joseph Olufemi Dada *
#define SOAP_NAMESPACE_OF_ns3	"http://copasi.org/copasiws/schemas"
//gsoap ns3   schema namespace:	http://copasi.org/copasiws/schemas
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:integer"
typedef std::string xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger"
typedef std::string xsd__nonNegativeInteger;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns2__DeterministicParameters.
class ns2__DeterministicParameters;

//  Forward declaration of class ns2__SensitivityParameters.
class ns2__SensitivityParameters;

//  Forward declaration of class _ns2__RunDeterministicSimulator.
class _ns2__RunDeterministicSimulator;

//  Forward declaration of class _ns2__RunDeterministicSimulatorResponse.
class _ns2__RunDeterministicSimulatorResponse;

//  Forward declaration of class _ns2__StartDeterministicSimulator.
class _ns2__StartDeterministicSimulator;

//  Forward declaration of class _ns2__StartDeterministicSimulatorResponse.
class _ns2__StartDeterministicSimulatorResponse;

//  Forward declaration of class ns3__Status.
class ns3__Status;

//  Forward declaration of class ns3__Transaction.
class ns3__Transaction;

//  Forward declaration of class ns3__User.
class ns3__User;

//  Forward declaration of class ns3__OutputResult.
class ns3__OutputResult;

//  Forward declaration of class _ns3__GetSimulatorStatus.
class _ns3__GetSimulatorStatus;

//  Forward declaration of class _ns3__GetSimulatorStatusResponse.
class _ns3__GetSimulatorStatusResponse;

//  Forward declaration of class _ns3__GetResult.
class _ns3__GetResult;

//  Forward declaration of class _ns3__GetResultResponse.
class _ns3__GetResultResponse;

//  Forward declaration of class _ns3__DeleteSimulationResource.
class _ns3__DeleteSimulationResource;

//  Forward declaration of class _ns3__DeleteSimulationResourceResponse.
class _ns3__DeleteSimulationResourceResponse;

//  Forward declaration of class _ns3__ServiceFault.
class _ns3__ServiceFault;

//  Forward declaration of class _ns3__ResourceProperty.
class _ns3__ResourceProperty;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://timecoursews.services.copasiws.copasi.org/types                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://copasi.org/copasiws/schemas                                       *
 *                                                                            *
\******************************************************************************/


/// "http://timecoursews.services.copasiws.copasi.org/types":Function is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns2__Function' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__Function
{
	ns2__Function__Concentration_x0020Fluxes_x0020of_x0020Reaction,	///< xs:string value="Concentration Fluxes of Reaction"
	ns2__Function__Particle_x0020Fluxes_x0020of_x0020Reactions,	///< xs:string value="Particle Fluxes of Reactions"
	ns2__Function__Non_Constant_x0020Concentration_x0020of_x0020Species,	///< xs:string value="Non-Constant Concentration of Species"
};

/// "http://timecoursews.services.copasiws.copasi.org/types":Variable is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns2__Variable' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__Variable
{
	ns2__Variable__All_x0020Parameter_x0020Values,	///< xs:string value="All Parameter Values"
	ns2__Variable__Initial_x0020Concentration,	///< xs:string value="Initial Concentration"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://copasi.org/copasiws/schemas                                       *
 *                                                                            *
\******************************************************************************/


/// "http://copasi.org/copasiws/schemas":StatusCode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__StatusCode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__StatusCode
{
	ns3__StatusCode__SUCCESS,	///< xs:string value="SUCCESS"
	ns3__StatusCode__FAIL,	///< xs:string value="FAIL"
	ns3__StatusCode__INCORRECTOBJECTMAP,	///< xs:string value="INCORRECTOBJECTMAP"
	ns3__StatusCode__UNKNOWNTRANSACTION,	///< xs:string value="UNKNOWNTRANSACTION"
	ns3__StatusCode__NOEXPERIMENTALDATA,	///< xs:string value="NOEXPERIMENTALDATA"
	ns3__StatusCode__INCOMPLETEDATA,	///< xs:string value="INCOMPLETEDATA"
	ns3__StatusCode__ALREADYEXISTS,	///< xs:string value="ALREADYEXISTS"
	ns3__StatusCode__NO_USCOREOF_USCORERESOURCES_USCOREEXCEEDED,	///< xs:string value="NO_OF_RESOURCES_EXCEEDED"
	ns3__StatusCode__COMPLETED,	///< xs:string value="COMPLETED"
	ns3__StatusCode__SCHEDULE_USCORETO_USCORESTART,	///< xs:string value="SCHEDULE_TO_START"
	ns3__StatusCode__RUNNING,	///< xs:string value="RUNNING"
	ns3__StatusCode__UNKNOWN,	///< xs:string value="UNKNOWN"
	ns3__StatusCode__SUSPENDED,	///< xs:string value="SUSPENDED"
	ns3__StatusCode__RESOURCE_USCOREALREADY_USCOREDELETED,	///< xs:string value="RESOURCE_ALREADY_DELETED"
	ns3__StatusCode__CANNOT_USCOREBE_USCORESTARTED,	///< xs:string value="CANNOT_BE_STARTED"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://timecoursews.services.copasiws.copasi.org/types                   *
 *                                                                            *
\******************************************************************************/


/// "http://timecoursews.services.copasiws.copasi.org/types":DeterministicParameters is a complexType.
class ns2__DeterministicParameters
{ public:
/// Element IntegrateReducedModel of type xs:boolean.
    bool                                 IntegrateReducedModel          = true;	///< Default value="true".
/// Element RelativeTolerance of type xs:float.
    float                                RelativeTolerance              = 1e-06;	///< Default value="1e-06".
/// Element AbsoluteTolerance of type xs:float.
    float                                AbsoluteTolerance              = 1e-12;	///< Default value="1e-12".
/// Element AdamsMaxOrder of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              AdamsMaxOrder                 ;	///< Default value="12".
/// Element BDFMaxOrder of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              BDFMaxOrder                   ;	///< Default value="5".
/// Element MaxInternalSteps of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaxInternalSteps              ;	///< Default value="10000".
/// Element StepNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              StepNumber                    ;	///< Default value="100".
/// Element StepSize of type xs:float.
    float                                StepSize                       = 0.01;	///< Default value="0.01".
/// Element Duration of type xs:float.
    float                                Duration                       = 1.0;	///< Default value="1.0".
/// Element OutputStartTime of type xs:float.
    float                                OutputStartTime                = 0.0;	///< Default value="0.0".
/// Element sensitivityParameters of type "http://timecoursews.services.copasiws.copasi.org/types":SensitivityParameters.
    ns2__SensitivityParameters*          sensitivityParameters          0;	///< Optional element.
/// Element updatedModelRequired of type xs:boolean.
    bool                                 updatedModelRequired           = false;	///< Default value="false".
/// Element updatedModelFormatRequired of type xs:string.
    std::string                          updatedModelFormatRequired     0 = "CopasiML";	///< Default value="CopasiML".
/// CHOICE OF ELEMENTS <xs:choice>
    int                                  __union_DeterministicParameters;	///< Union _ns2__union_DeterministicParameters selector: set to SOAP_UNION__ns2__union_DeterministicParameters_<fieldname>
    union _ns2__union_DeterministicParameters
    {
/// Element copasiml of type xs:string.
    std::string*                         copasiml                       1;	///< Required element.
/// Element sbml of type xs:string.
    std::string*                         sbml                           1;	///< Required element.
    }                                    union_DeterministicParameters ;
//  END OF CHOICE
@    enum _ns2__DeterministicParameters_inputFormat
    {
	_ns2__DeterministicParameters_inputFormat__SBML,	///< xs:string value="SBML"
	_ns2__DeterministicParameters_inputFormat__CopasiML,	///< xs:string value="CopasiML"
    }
                                         inputFormat                    0 = _ns2__DeterministicParameters_inputFormat__SBML;	///< Default value="SBML".
@    enum _ns2__DeterministicParameters_outputFormat
    {
	_ns2__DeterministicParameters_outputFormat__text,	///< xs:string value="text"
	_ns2__DeterministicParameters_outputFormat__sbrml,	///< xs:string value="sbrml"
    }
                                         outputFormat                   0 = _ns2__DeterministicParameters_outputFormat__sbrml;	///< Default value="sbrml".
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://timecoursews.services.copasiws.copasi.org/types":SensitivityParameters is a complexType.
class ns2__SensitivityParameters
{ public:
/// Element function of type "http://timecoursews.services.copasiws.copasi.org/types":Function.
    enum ns2__Function                   function                       1;	///< Required element.
/// Element variable of type "http://timecoursews.services.copasiws.copasi.org/types":Variable.
    enum ns2__Variable                   variable                       1;	///< Required element.
/// Element deltaFactor of type xs:float.
    float                                deltaFactor                    = 0.001;	///< Default value="0.001".
/// Element deltaMinimum of type xs:float.
    float                                deltaMinimum                   = 1e-12;	///< Default value="1e-12".
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://timecoursews.services.copasiws.copasi.org/types":RunDeterministicSimulator

/// "http://timecoursews.services.copasiws.copasi.org/types":RunDeterministicSimulator is a complexType.
class _ns2__RunDeterministicSimulator
{ public:
/// Element parameters of type "http://timecoursews.services.copasiws.copasi.org/types":DeterministicParameters.
    ns2__DeterministicParameters*        parameters                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://timecoursews.services.copasiws.copasi.org/types":RunDeterministicSimulatorResponse

/// "http://timecoursews.services.copasiws.copasi.org/types":RunDeterministicSimulatorResponse is a complexType.
class _ns2__RunDeterministicSimulatorResponse
{ public:
/// Element outputResult of type "http://copasi.org/copasiws/schemas":OutputResult.
    ns3__OutputResult*                   outputResult                   1;	///< Required element.
/// Element sensitityResult of type xs:string.
    std::string                          sensitityResult                1;	///< Required element.
/// Element updatedModel of type xs:string.
    std::string*                         updatedModel                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://timecoursews.services.copasiws.copasi.org/types":StartDeterministicSimulator

/// "http://timecoursews.services.copasiws.copasi.org/types":StartDeterministicSimulator is a complexType.
class _ns2__StartDeterministicSimulator
{ public:
/// Element user of type "http://copasi.org/copasiws/schemas":User.
    ns3__User*                           user                           1;	///< Required element.
/// Element parameters of type "http://timecoursews.services.copasiws.copasi.org/types":DeterministicParameters.
    ns2__DeterministicParameters*        parameters                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://timecoursews.services.copasiws.copasi.org/types":StartDeterministicSimulatorResponse

/// "http://timecoursews.services.copasiws.copasi.org/types":StartDeterministicSimulatorResponse is a complexType.
class _ns2__StartDeterministicSimulatorResponse
{ public:
/// Element status of type "http://copasi.org/copasiws/schemas":Status.
    ns3__Status*                         status                         1;	///< Required element.
/// Element resourceId of type xs:int.
    int                                  resourceId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://copasi.org/copasiws/schemas                                       *
 *                                                                            *
\******************************************************************************/


/// "http://copasi.org/copasiws/schemas":Status is a complexType.
class ns3__Status
{ public:
/// Element code of type "http://copasi.org/copasiws/schemas":StatusCode.
    enum ns3__StatusCode                 code                           1;	///< Required element.
/// Element message of type xs:string.
    std::string*                         message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://copasi.org/copasiws/schemas":Transaction is a complexType.
class ns3__Transaction
{ public:
/// Element id of type xs:int.
    int                                  id                             1;	///< Required element.
/// Element duration of type xs:int.
    int*                                 duration                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://copasi.org/copasiws/schemas":User is a complexType.
class ns3__User
{ public:
/// Element userId of type xs:string.
    std::string                          userId                         1;	///< Required element.
/// Element password of type xs:string.
    std::string*                         password                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://copasi.org/copasiws/schemas":OutputResult is a complexType.
class ns3__OutputResult
{ public:
/// Element result of type xs:string.
    std::string                          result                         1;	///< Required element.
@    enum _ns3__OutputResult_format
    {
	_ns3__OutputResult_format__text,	///< xs:string value="text"
	_ns3__OutputResult_format__sbrml,	///< xs:string value="sbrml"
    }
                                         format                         0 = _ns3__OutputResult_format__sbrml;	///< Default value="sbrml".
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":GetSimulatorStatus

/// "http://copasi.org/copasiws/schemas":GetSimulatorStatus is a complexType.
class _ns3__GetSimulatorStatus
{ public:
/// Element userId of type xs:string.
    std::string                          userId                         1;	///< Required element.
/// Element resourceId of type xs:int.
    int                                  resourceId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":GetSimulatorStatusResponse

/// "http://copasi.org/copasiws/schemas":GetSimulatorStatusResponse is a complexType.
class _ns3__GetSimulatorStatusResponse
{ public:
/// Element status of type "http://copasi.org/copasiws/schemas":Status.
    ns3__Status*                         status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":GetResult

/// "http://copasi.org/copasiws/schemas":GetResult is a complexType.
class _ns3__GetResult
{ public:
/// Element userId of type xs:string.
    std::string                          userId                         1;	///< Required element.
/// Element resourceId of type xs:int.
    int                                  resourceId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":GetResultResponse

/// "http://copasi.org/copasiws/schemas":GetResultResponse is a complexType.
class _ns3__GetResultResponse
{ public:
/// Element outputResult of type "http://copasi.org/copasiws/schemas":OutputResult.
    ns3__OutputResult*                   outputResult                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":DeleteSimulationResource

/// "http://copasi.org/copasiws/schemas":DeleteSimulationResource is a complexType.
class _ns3__DeleteSimulationResource
{ public:
/// Element userId of type xs:string.
    std::string                          userId                         1;	///< Required element.
/// Element resourceId of type xs:int.
    int                                  resourceId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":DeleteSimulationResourceResponse

/// "http://copasi.org/copasiws/schemas":DeleteSimulationResourceResponse is a complexType.
class _ns3__DeleteSimulationResourceResponse
{ public:
/// Element status of type "http://copasi.org/copasiws/schemas":Status.
    ns3__Status*                         status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":ServiceFault

/// "http://copasi.org/copasiws/schemas":ServiceFault is a complexType.
class _ns3__ServiceFault
{ public:
/// Element errorMessage of type xs:string.
    std::string                          errorMessage                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://copasi.org/copasiws/schemas":ResourceProperty

/// "http://copasi.org/copasiws/schemas":ResourceProperty is a complexType.
class _ns3__ResourceProperty
{ public:
/// Element resourceId of type xs:string.
    std::string                          resourceId                     1;	///< Required element.
/// Element modelFile of type xs:string.
    std::string                          modelFile                      1;	///< Required element.
/// Element resultFile of type xs:string.
    std::string                          resultFile                     1;	///< Required element.
/// Element lifeTime of type xs:integer.
    xsd__integer                         lifeTime                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://timecoursews.services.copasiws.copasi.org/types                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://timecoursews.services.copasiws.copasi.org/types                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://copasi.org/copasiws/schemas                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://copasi.org/copasiws/schemas                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	binding 
//gsoap ns1  service type:	TimeCoursePortType 
//gsoap ns1  service port:	http://localhost:8080/axis2/services/TimeCourseService 
//gsoap ns1  service namespace:	http://services.copasiws.copasi.org/timecoursews.wsdl 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage TimeCourseService Definitions

@section TimeCourseService_bindings Service Bindings
  - @ref binding

@section TimeCourseService_more More Information
- @ref page_notes "Notes"
- @ref page_XMLDataBinding "XML Data Binding"
- @ref SOAP_ENV__Header "SOAP Header Content"
- @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page binding Binding "binding"

@section binding_operations Operations of Binding  "binding"
  - @ref __ns1__runDeterministicSimulator
  - @ref __ns1__startDeterministicSimulator
  - @ref __ns1__getSimulatorStatus
  - @ref __ns1__getResult
  - @ref __ns1__deleteSimulationResource

@section binding_ports Endpoints of Binding  "binding"
  - http://localhost:8080/axis2/services/TimeCourseService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _ns3__ServiceFault*                  ns3__ServiceFault             ;
///< SOAP Fault element ""http://copasi.org/copasiws/schemas":ServiceFault" part "ServiceFaultMessage"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
    _XML                                 __any                         ;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   binding                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__runDeterministicSimulator                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__runDeterministicSimulator" of service binding "binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="RunDeterministicSimulator"
  - SOAP Fault: "http://copasi.org/copasiws/schemas":ServiceFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__runDeterministicSimulator(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__RunDeterministicSimulator*    ns2__RunDeterministicSimulator,
    // response parameters:
    _ns2__RunDeterministicSimulatorResponse* ns2__RunDeterministicSimulatorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__runDeterministicSimulator(
    struct soap *soap,
    // request parameters:
    _ns2__RunDeterministicSimulator*    ns2__RunDeterministicSimulator,
    // response parameters:
    _ns2__RunDeterministicSimulatorResponse* ns2__RunDeterministicSimulatorResponse
  );
@endcode

C++ proxy class (defined in soapbindingProxy.h):
@code
  class bindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapbindingService.h):
@code
  class bindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	runDeterministicSimulator document
//gsoap ns1  service method-encoding:	runDeterministicSimulator literal
//gsoap ns1  service method-action:	runDeterministicSimulator RunDeterministicSimulator
//gsoap ns1  service method-fault:	runDeterministicSimulator ns3__ServiceFault
int __ns1__runDeterministicSimulator(
    _ns2__RunDeterministicSimulator*    ns2__RunDeterministicSimulator,	///< Request parameter
    _ns2__RunDeterministicSimulatorResponse* ns2__RunDeterministicSimulatorResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__startDeterministicSimulator                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__startDeterministicSimulator" of service binding "binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="StartDeterministicSimulator"
  - SOAP Fault: "http://copasi.org/copasiws/schemas":ServiceFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__startDeterministicSimulator(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__StartDeterministicSimulator*  ns2__StartDeterministicSimulator,
    // response parameters:
    _ns2__StartDeterministicSimulatorResponse* ns2__StartDeterministicSimulatorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__startDeterministicSimulator(
    struct soap *soap,
    // request parameters:
    _ns2__StartDeterministicSimulator*  ns2__StartDeterministicSimulator,
    // response parameters:
    _ns2__StartDeterministicSimulatorResponse* ns2__StartDeterministicSimulatorResponse
  );
@endcode

C++ proxy class (defined in soapbindingProxy.h):
@code
  class bindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapbindingService.h):
@code
  class bindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	startDeterministicSimulator document
//gsoap ns1  service method-encoding:	startDeterministicSimulator literal
//gsoap ns1  service method-action:	startDeterministicSimulator StartDeterministicSimulator
//gsoap ns1  service method-fault:	startDeterministicSimulator ns3__ServiceFault
int __ns1__startDeterministicSimulator(
    _ns2__StartDeterministicSimulator*  ns2__StartDeterministicSimulator,	///< Request parameter
    _ns2__StartDeterministicSimulatorResponse* ns2__StartDeterministicSimulatorResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getSimulatorStatus                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getSimulatorStatus" of service binding "binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="GetSimulatorStatus"
  - SOAP Fault: "http://copasi.org/copasiws/schemas":ServiceFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getSimulatorStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns3__GetSimulatorStatus*           ns3__GetSimulatorStatus,
    // response parameters:
    _ns3__GetSimulatorStatusResponse*   ns3__GetSimulatorStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getSimulatorStatus(
    struct soap *soap,
    // request parameters:
    _ns3__GetSimulatorStatus*           ns3__GetSimulatorStatus,
    // response parameters:
    _ns3__GetSimulatorStatusResponse*   ns3__GetSimulatorStatusResponse
  );
@endcode

C++ proxy class (defined in soapbindingProxy.h):
@code
  class bindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapbindingService.h):
@code
  class bindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	getSimulatorStatus document
//gsoap ns1  service method-encoding:	getSimulatorStatus literal
//gsoap ns1  service method-action:	getSimulatorStatus GetSimulatorStatus
//gsoap ns1  service method-fault:	getSimulatorStatus ns3__ServiceFault
int __ns1__getSimulatorStatus(
    _ns3__GetSimulatorStatus*           ns3__GetSimulatorStatus,	///< Request parameter
    _ns3__GetSimulatorStatusResponse*   ns3__GetSimulatorStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getResult                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getResult" of service binding "binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="GetResult"
  - SOAP Fault: "http://copasi.org/copasiws/schemas":ServiceFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getResult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns3__GetResult*                    ns3__GetResult,
    // response parameters:
    _ns3__GetResultResponse*            ns3__GetResultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getResult(
    struct soap *soap,
    // request parameters:
    _ns3__GetResult*                    ns3__GetResult,
    // response parameters:
    _ns3__GetResultResponse*            ns3__GetResultResponse
  );
@endcode

C++ proxy class (defined in soapbindingProxy.h):
@code
  class bindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapbindingService.h):
@code
  class bindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	getResult document
//gsoap ns1  service method-encoding:	getResult literal
//gsoap ns1  service method-action:	getResult GetResult
//gsoap ns1  service method-fault:	getResult ns3__ServiceFault
int __ns1__getResult(
    _ns3__GetResult*                    ns3__GetResult,	///< Request parameter
    _ns3__GetResultResponse*            ns3__GetResultResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__deleteSimulationResource                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__deleteSimulationResource" of service binding "binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="DeleteSimulationResource"
  - SOAP Fault: "http://copasi.org/copasiws/schemas":ServiceFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__deleteSimulationResource(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns3__DeleteSimulationResource*     ns3__DeleteSimulationResource,
    // response parameters:
    _ns3__DeleteSimulationResourceResponse* ns3__DeleteSimulationResourceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__deleteSimulationResource(
    struct soap *soap,
    // request parameters:
    _ns3__DeleteSimulationResource*     ns3__DeleteSimulationResource,
    // response parameters:
    _ns3__DeleteSimulationResourceResponse* ns3__DeleteSimulationResourceResponse
  );
@endcode

C++ proxy class (defined in soapbindingProxy.h):
@code
  class bindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapbindingService.h):
@code
  class bindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	deleteSimulationResource document
//gsoap ns1  service method-encoding:	deleteSimulationResource literal
//gsoap ns1  service method-action:	deleteSimulationResource DeleteSimulationResource
//gsoap ns1  service method-fault:	deleteSimulationResource ns3__ServiceFault
int __ns1__deleteSimulationResource(
    _ns3__DeleteSimulationResource*     ns3__DeleteSimulationResource,	///< Request parameter
    _ns3__DeleteSimulationResourceResponse* ns3__DeleteSimulationResourceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings are adopted from XML schemas as part of the WSDL types section or when running wsdl2h on a set of schemas.

The following readers and writers are C/C++ data type (de)serializers auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the (de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in your code to import these data type and function declarations. Only use the soapcpp2-generated files in your project build. Do not include the wsdl2h-generated .h file in your code.

XML content can be retrieved from:
  - a FILE* fd, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a FILE* fd, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "http://timecoursews.services.copasiws.copasi.org/types"

  - <ns2:RunDeterministicSimulator> @ref _ns2__RunDeterministicSimulator
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__RunDeterministicSimulator(struct soap*, _ns2__RunDeterministicSimulator*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__RunDeterministicSimulator(struct soap*, _ns2__RunDeterministicSimulator*);
    @endcode

  - <ns2:RunDeterministicSimulatorResponse> @ref _ns2__RunDeterministicSimulatorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__RunDeterministicSimulatorResponse(struct soap*, _ns2__RunDeterministicSimulatorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__RunDeterministicSimulatorResponse(struct soap*, _ns2__RunDeterministicSimulatorResponse*);
    @endcode

  - <ns2:StartDeterministicSimulator> @ref _ns2__StartDeterministicSimulator
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__StartDeterministicSimulator(struct soap*, _ns2__StartDeterministicSimulator*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__StartDeterministicSimulator(struct soap*, _ns2__StartDeterministicSimulator*);
    @endcode

  - <ns2:StartDeterministicSimulatorResponse> @ref _ns2__StartDeterministicSimulatorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__StartDeterministicSimulatorResponse(struct soap*, _ns2__StartDeterministicSimulatorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__StartDeterministicSimulatorResponse(struct soap*, _ns2__StartDeterministicSimulatorResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://copasi.org/copasiws/schemas"

  - <ns3:GetSimulatorStatus> @ref _ns3__GetSimulatorStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetSimulatorStatus(struct soap*, _ns3__GetSimulatorStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetSimulatorStatus(struct soap*, _ns3__GetSimulatorStatus*);
    @endcode

  - <ns3:GetSimulatorStatusResponse> @ref _ns3__GetSimulatorStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetSimulatorStatusResponse(struct soap*, _ns3__GetSimulatorStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetSimulatorStatusResponse(struct soap*, _ns3__GetSimulatorStatusResponse*);
    @endcode

  - <ns3:GetResult> @ref _ns3__GetResult
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetResult(struct soap*, _ns3__GetResult*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetResult(struct soap*, _ns3__GetResult*);
    @endcode

  - <ns3:GetResultResponse> @ref _ns3__GetResultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetResultResponse(struct soap*, _ns3__GetResultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetResultResponse(struct soap*, _ns3__GetResultResponse*);
    @endcode

  - <ns3:DeleteSimulationResource> @ref _ns3__DeleteSimulationResource
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__DeleteSimulationResource(struct soap*, _ns3__DeleteSimulationResource*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__DeleteSimulationResource(struct soap*, _ns3__DeleteSimulationResource*);
    @endcode

  - <ns3:DeleteSimulationResourceResponse> @ref _ns3__DeleteSimulationResourceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__DeleteSimulationResourceResponse(struct soap*, _ns3__DeleteSimulationResourceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__DeleteSimulationResourceResponse(struct soap*, _ns3__DeleteSimulationResourceResponse*);
    @endcode

  - <ns3:ServiceFault> @ref _ns3__ServiceFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ServiceFault(struct soap*, _ns3__ServiceFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ServiceFault(struct soap*, _ns3__ServiceFault*);
    @endcode

  - <ns3:ResourceProperty> @ref _ns3__ResourceProperty
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ResourceProperty(struct soap*, _ns3__ResourceProperty*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ResourceProperty(struct soap*, _ns3__ResourceProperty*);
    @endcode

*/

/* End of copasiws3/timecoursews.h */
